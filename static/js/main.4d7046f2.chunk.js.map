{"version":3,"sources":["components/Menu.js","graphql/mutations.js","graphql/queries.js","Pages/ShowTodo.js","components/Footer/Footr.js","Pages/AddTodo.js","App.js","graphql/client.js","index.js"],"names":["Example","props","useState","isOpen","Navbar","color","light","expand","NavbarBrand","className","Collapse","navbar","Nav","NavbarText","TOGGLE_TODOS","gql","ADD_TODOS","GET_TODOS","ShowTodo","useQuery","data","loading","error","useMutation","toggleTodo","type","height","width","handleToggleTodo","id","DoneStatus","variables","then","res","console","log","window","location","reload","catch","Todo","length","map","todo","key","style","cursor","Container","Row","Col","sm","xl","aria-hidden","class","onClick","Title","Description","date","Footer","fluid","Component","AddTodo","addTodo","React","description","setDescription","title","setTitle","Menu","onSubmit","e","preventDefault","trim","refetchQueries","query","alert","placeholder","onChange","target","value","required","App","client","ApolloClient","uri","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d7046f2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavbarText\n} from 'reactstrap';\nimport './menu.css';\n\nconst Example = (props) => {\n  const [isOpen] = useState(false);\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand className='brand'>\n          Learncool\n        </NavbarBrand>\n        {/* <NavbarToggler onClick={toggle} /> */}\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar />\n          <NavbarText className='pr-5'>\n            <h4>Todo App</h4>\n          </NavbarText>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Example;","import { gql } from 'apollo-boost';\n\nexport const TOGGLE_TODOS = gql`\nmutation toggleTodo($id: uuid!, $DoneStatus: String!) {\n    update_Todo(where: {id: {_eq: $id}}, _set: {DoneStatus: $DoneStatus}) {\n      returning {\n        Description\n        DoneStatus\n        Title\n        date\n        id\n      }\n    }\n  }\n`\n\nexport const ADD_TODOS = gql`\nmutation insert_Todo($Description: String!, $Title: String!) {\n    insert_Todo(objects: {Description: $Description, Title: $Title}) {\n      returning {\n        Description\n        Title\n        DoneStatus\n        date\n      }\n    }\n  }\n`","import { gql } from \"apollo-boost\";\n\nexport const GET_TODOS = gql`\nquery MyQuery {\n  Todo (where: {DoneStatus: {_eq: \"false\"}}) {\n    id\n    Description\n    DoneStatus\n    Title\n    date\n  }\n}\n`\n","import React from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { GET_TODOS } from \"../graphql/queries\";\nimport { TOGGLE_TODOS } from \"../graphql/mutations\";\nimport Loader from \"react-loader-spinner\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nconst ShowTodo = () => {\n  const { data, loading, error } = useQuery(GET_TODOS);\n  const [toggleTodo] = useMutation(TOGGLE_TODOS);\n\n  if (loading)\n    return (\n      <div>\n        <h5>Please wait while we load the Todos.</h5>\n        <Loader type=\"Rings\" color=\"#20b2aa\" height={100} width={100} />\n      </div>\n    );\n  if (error) return <div>Something went wrong . . . . . .</div>;\n\n  function handleToggleTodo({ id, DoneStatus }) {\n    if (DoneStatus === \"false\") DoneStatus = \"true\";\n    else DoneStatus = \"false\";\n\n    const variables = {\n      id,\n      DoneStatus,\n    };\n\n    toggleTodo({ variables })\n      .then((res) => {\n        console.log(\"Todo updated, \", res);\n        \n        // Refresh the page after Todo item is deleted \n        window.location.reload(false)\n      })\n      .catch((error) => {\n        console.log(\"Error in Toggle function, \", error);\n      });\n  }\n\n  const DisplayTodo = () => {\n    if (data.Todo.length === 0) {\n      return <h1 className='text-center'>\n        No Todo item added yet.\n      </h1>;\n    } else {\n      return data.Todo.map((todo) => (\n        <div\n          className=\"todo\"\n          key={todo.id}\n          style={{ cursor: \"pointer\" }}\n        >\n          <Container>\n            <Row>\n            <Col sm={4} xl={1} className='close1'>\n                <i\n                  aria-hidden=\"true\"\n                  class=\"close link icon\"\n                  onClick={() => handleToggleTodo(todo)}\n                />\n              </Col>\n              <Col sm={8} xl={11} className='desc'>\n                <strong>Title: </strong>\n                {todo.Title}\n                <br />\n                <strong>Description: </strong>\n                {todo.Description}\n                <br />\n                <strong>Date added: </strong>\n                {todo.date}\n                <br />\n              </Col>\n              <Col sm={4} xl={1} className='close2'>\n                <i\n                  aria-hidden=\"true\"\n                  class=\"close link icon\"\n                  onClick={() => handleToggleTodo(todo)}\n                />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      ));\n    }\n  };\n\n  return <div className=\"text-left\">{DisplayTodo()}</div>;\n};\n\nexport default ShowTodo;\n","import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\n\nimport './footer.css';\n\nclass Footer extends Component {\n    render() { \n        return (\n            <Container className=\"themed-container footer bg-dark text-center\" fluid={true}>\n                &#169; Learncool Pvt. Ltd.\n            </Container>\n        );\n    }\n}\n \nexport default Footer;","import React from \"react\";\nimport Menu from \"../components/Menu\";\nimport { ADD_TODOS } from \"../graphql/mutations\";\nimport { GET_TODOS } from \"../graphql/queries\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport ShowTodo from \"./ShowTodo\";\nimport { Container } from \"reactstrap\";\n\nimport \"./style.css\";\nimport Footer from \"../components/Footer/Footr\";\n\nconst AddTodo = () => {\n  const [addTodo] = useMutation(ADD_TODOS);\n\n  const [description, setDescription] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!title.trim() && !description.trim()) return;\n\n    var variables = {\n      Title: title,\n      Description: description,\n    };\n\n    addTodo({\n      variables: variables,\n      refetchQueries: [{ query: GET_TODOS }],\n    }).then(() => {\n      alert(\"Todo Added\");\n      setDescription(\"\");\n      setTitle(\"\");\n    });\n  }\n  return (\n    <div>\n      <Menu />\n      <Container className=\"text-center\">\n        <h2 className=\"mt-4\">Add a Todo</h2>\n        <form onSubmit={handleSubmit} className=\"form\">\n          <input\n            className=\"field\"\n            type=\"text\"\n            placeholder=\"Enter the Title\"\n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n            required\n          />\n          <br />\n          <br />\n          <input\n            className=\"field\"\n            type=\"text\"\n            placeholder=\"description\"\n            onChange={(e) => setDescription(e.target.value)}\n            value={description}\n            required\n          />\n          <br />\n          <br />\n          <button type=\"submit\" className=\"btn\">\n            Create a Todo\n          </button>\n          <br />\n          <br />\n        </form>\n        <ShowTodo />\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n\nexport default AddTodo;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AddTodo from \"./Pages/AddTodo\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <AddTodo />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n    uri: 'https://knowing-akita-91.hasura.app/v1/graphql'\n});\n\nexport default client;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport App from './App';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport client from './graphql/client';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}